// 자바스크립트 안티 패턴

// ------------------------------------------------------------------
// 안티패턴 4번째: 네이티브 데이터 유형의 경우, 생성자 함수를 통해 객체를 생성하지 말아라.
// ------------------------------------------------------------------

// 자바스크립트의 데이터 유형과 생성자 함수
// 숫자 Number()
// 문자 String()
// 불린 Boolean()
// 함수 Function()
// 배열 Array()
// 객체 Object()

// 자바스크립트의 함수는 일급 객체
// 함수가 다양하게 활용 가능
// 생성자 함수로서의 역할 === Class 역할
// 생성자함수() 이름 앞에 new 키워드를 붙여 사용하면
// 객체를 생성하는 역할을 수행한다.

// 안티패턴
// 배열, 객체, 함수 생성자를 사용하지 말아야 한다.
var arr = new Array(9);
var fnc = new Function('console.log(\'hi\')');
var obj = new Object();


// var 를 여러번 사용하여 변수를 선언한 경우
var num;
var str;
var boo;
var fnc;
var arr;
var obj;
var reg;

// var를 한 번만 사용하여 변수를 묶는 경우
var num, str, boo, fnc, arr, obj, reg;

// 후에 데이터를 변수에 할당
// 생성자 함수가 아닌, 리터럴을 사용하라.
num = 9; // 데이터 값(리터럴)
str = 'hi';
boo = false;

/**
 * --------------------------------
 * var 한 번만 사용하는 싱글 var 패턴
 * 변수 선언과 값을 동시에 수행한다.
 * ----------------------------- */
var num = 9,
    str = '나인',
    boo = true,
    fnc = function(){},
    arr = [],
    obj = {},
    // new RegExp('[0-9][a-z]', 'ig');
    reg = /[0-9][a-z]/ig;
